name: Tests
on:
  push:
    branches:
      - master
      - main
      - "release/*"
  pull_request:
jobs:
  integration:
    name: Integrations
    runs-on: 'ubuntu-18.04'
    strategy:
      matrix:
        FEATURES: ["",enterprise]
        MULTITENANCY: [true, false]
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - uses: actions/setup-go@v2
      with:
        go-version: '~1.17.8'
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: go version
    - run: go mod download # Not required, used to segregate module download vs test times
    # - name: set enterprise token
    #   run: |
    #     echo "ENTERPRISE_TOKEN=${{ secrets.ENTERPRISE_TOKEN }}" >> $GITHUB_ENV
    #   if: "${{FEATURES}} == enterprise"

    - name: Integration test
      run: go test -v ./docker_test.go -tags=integration -count 1
      env:
        RSERVER_ENABLE_MULTITENANCY: ${{ matrix.MULTITENANCY }}
        BIGQUERY_INTEGRATION_TEST_USER_CRED: ${{ secrets.BIGQUERY_INTEGRATION_TEST_USER_CRED }}
        ENTERPRISE_TOKEN: ${{ secrets.ENTERPRISE_TOKEN }}

  unit:
    name: Unit
    runs-on: 'ubuntu-18.04'
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: '~1.17.8'
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-
    - run: go version
    - run: go mod download # Not required, used to segregate module download vs test times
    - run: (cd /tmp && go install -mod=mod github.com/onsi/ginkgo/v2/ginkgo@latest)
    - run: ginkgo version
    - run: make test

