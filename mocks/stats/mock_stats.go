// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rudderlabs/rudder-server/services/stats (interfaces: Stats)

// Package mocks_stats is a generated GoMock package.
package mocks_stats

import (
	gomock "github.com/golang/mock/gomock"
	stats "github.com/rudderlabs/rudder-server/services/stats"
	reflect "reflect"
)

// MockStats is a mock of Stats interface
type MockStats struct {
	ctrl     *gomock.Controller
	recorder *MockStatsMockRecorder
}

// MockStatsMockRecorder is the mock recorder for MockStats
type MockStatsMockRecorder struct {
	mock *MockStats
}

// NewMockStats creates a new mock instance
func NewMockStats(ctrl *gomock.Controller) *MockStats {
	mock := &MockStats{ctrl: ctrl}
	mock.recorder = &MockStatsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockStats) EXPECT() *MockStatsMockRecorder {
	return m.recorder
}

// NewStat mocks base method
func (m *MockStats) NewStat(arg0, arg1 string) stats.RudderStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewStat", arg0, arg1)
	ret0, _ := ret[0].(stats.RudderStats)
	return ret0
}

// NewStat indicates an expected call of NewStat
func (mr *MockStatsMockRecorder) NewStat(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewStat", reflect.TypeOf((*MockStats)(nil).NewStat), arg0, arg1)
}

// NewTaggedStat mocks base method
func (m *MockStats) NewTaggedStat(arg0, arg1 string, arg2 stats.Tags) stats.RudderStats {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "NewTaggedStat", arg0, arg1, arg2)
	ret0, _ := ret[0].(stats.RudderStats)
	return ret0
}

// NewTaggedStat indicates an expected call of NewTaggedStat
func (mr *MockStatsMockRecorder) NewTaggedStat(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewTaggedStat", reflect.TypeOf((*MockStats)(nil).NewTaggedStat), arg0, arg1, arg2)
}
