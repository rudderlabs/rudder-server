// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rudderlabs/rudder-server/router/batchrouter/asyncdestinationmanager/marketo-bulk-upload (interfaces: MarketoAPIServiceInterface)

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	marketobulkupload "github.com/rudderlabs/rudder-server/router/batchrouter/asyncdestinationmanager/marketo-bulk-upload"
)

// MockMarketoAPIServiceInterface is a mock of MarketoAPIServiceInterface interface.
type MockMarketoAPIServiceInterface struct {
	ctrl     *gomock.Controller
	recorder *MockMarketoAPIServiceInterfaceMockRecorder
}

// MockMarketoAPIServiceInterfaceMockRecorder is the mock recorder for MockMarketoAPIServiceInterface.
type MockMarketoAPIServiceInterfaceMockRecorder struct {
	mock *MockMarketoAPIServiceInterface
}

// NewMockMarketoAPIServiceInterface creates a new mock instance.
func NewMockMarketoAPIServiceInterface(ctrl *gomock.Controller) *MockMarketoAPIServiceInterface {
	mock := &MockMarketoAPIServiceInterface{ctrl: ctrl}
	mock.recorder = &MockMarketoAPIServiceInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockMarketoAPIServiceInterface) EXPECT() *MockMarketoAPIServiceInterfaceMockRecorder {
	return m.recorder
}

// GetLeadStatus mocks base method.
func (m *MockMarketoAPIServiceInterface) GetLeadStatus(arg0 string) ([]map[string]string, *marketobulkupload.APIError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetLeadStatus", arg0)
	ret0, _ := ret[0].([]map[string]string)
	ret1, _ := ret[1].(*marketobulkupload.APIError)
	return ret0, ret1
}

// GetLeadStatus indicates an expected call of GetLeadStatus.
func (mr *MockMarketoAPIServiceInterfaceMockRecorder) GetLeadStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetLeadStatus", reflect.TypeOf((*MockMarketoAPIServiceInterface)(nil).GetLeadStatus), arg0)
}

// ImportLeads mocks base method.
func (m *MockMarketoAPIServiceInterface) ImportLeads(arg0, arg1 string) (string, *marketobulkupload.APIError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ImportLeads", arg0, arg1)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(*marketobulkupload.APIError)
	return ret0, ret1
}

// ImportLeads indicates an expected call of ImportLeads.
func (mr *MockMarketoAPIServiceInterfaceMockRecorder) ImportLeads(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ImportLeads", reflect.TypeOf((*MockMarketoAPIServiceInterface)(nil).ImportLeads), arg0, arg1)
}

// PollImportStatus mocks base method.
func (m *MockMarketoAPIServiceInterface) PollImportStatus(arg0 string) (*marketobulkupload.MarketoResponse, *marketobulkupload.APIError) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PollImportStatus", arg0)
	ret0, _ := ret[0].(*marketobulkupload.MarketoResponse)
	ret1, _ := ret[1].(*marketobulkupload.APIError)
	return ret0, ret1
}

// PollImportStatus indicates an expected call of PollImportStatus.
func (mr *MockMarketoAPIServiceInterfaceMockRecorder) PollImportStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PollImportStatus", reflect.TypeOf((*MockMarketoAPIServiceInterface)(nil).PollImportStatus), arg0)
}
