// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rudderlabs/rudder-server/services/streammanager/googlecloudfunction (interfaces: GoogleCloudFunctionClient)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/services/streammanager/googlecloudfunction/mock_googlecloudfunction.go -package mock_googlecloudfunction github.com/rudderlabs/rudder-server/services/streammanager/googlecloudfunction GoogleCloudFunctionClient
//

// Package mock_googlecloudfunction is a generated GoMock package.
package mock_googlecloudfunction

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
	oauth2 "golang.org/x/oauth2"
	option "google.golang.org/api/option"
)

// MockGoogleCloudFunctionClient is a mock of GoogleCloudFunctionClient interface.
type MockGoogleCloudFunctionClient struct {
	ctrl     *gomock.Controller
	recorder *MockGoogleCloudFunctionClientMockRecorder
	isgomock struct{}
}

// MockGoogleCloudFunctionClientMockRecorder is the mock recorder for MockGoogleCloudFunctionClient.
type MockGoogleCloudFunctionClientMockRecorder struct {
	mock *MockGoogleCloudFunctionClient
}

// NewMockGoogleCloudFunctionClient creates a new mock instance.
func NewMockGoogleCloudFunctionClient(ctrl *gomock.Controller) *MockGoogleCloudFunctionClient {
	mock := &MockGoogleCloudFunctionClient{ctrl: ctrl}
	mock.recorder = &MockGoogleCloudFunctionClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGoogleCloudFunctionClient) EXPECT() *MockGoogleCloudFunctionClientMockRecorder {
	return m.recorder
}

// GetToken mocks base method.
func (m *MockGoogleCloudFunctionClient) GetToken(ctx context.Context, functionUrl string, opts ...option.ClientOption) (*oauth2.Token, error) {
	m.ctrl.T.Helper()
	varargs := []any{ctx, functionUrl}
	for _, a := range opts {
		varargs = append(varargs, a)
	}
	ret := m.ctrl.Call(m, "GetToken", varargs...)
	ret0, _ := ret[0].(*oauth2.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetToken indicates an expected call of GetToken.
func (mr *MockGoogleCloudFunctionClientMockRecorder) GetToken(ctx, functionUrl any, opts ...any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	varargs := append([]any{ctx, functionUrl}, opts...)
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetToken", reflect.TypeOf((*MockGoogleCloudFunctionClient)(nil).GetToken), varargs...)
}
