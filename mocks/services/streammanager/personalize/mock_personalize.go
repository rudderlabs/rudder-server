// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rudderlabs/rudder-server/services/streammanager/personalize (interfaces: PersonalizeClient)

// Package mock_personalize is a generated GoMock package.
package mock_personalize

import (
	reflect "reflect"

	personalizeevents "github.com/aws/aws-sdk-go/service/personalizeevents"
	gomock "github.com/golang/mock/gomock"
)

// MockPersonalizeClient is a mock of PersonalizeClient interface.
type MockPersonalizeClient struct {
	ctrl     *gomock.Controller
	recorder *MockPersonalizeClientMockRecorder
}

// MockPersonalizeClientMockRecorder is the mock recorder for MockPersonalizeClient.
type MockPersonalizeClientMockRecorder struct {
	mock *MockPersonalizeClient
}

// NewMockPersonalizeClient creates a new mock instance.
func NewMockPersonalizeClient(ctrl *gomock.Controller) *MockPersonalizeClient {
	mock := &MockPersonalizeClient{ctrl: ctrl}
	mock.recorder = &MockPersonalizeClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockPersonalizeClient) EXPECT() *MockPersonalizeClientMockRecorder {
	return m.recorder
}

// PutEvents mocks base method.
func (m *MockPersonalizeClient) PutEvents(arg0 *personalizeevents.PutEventsInput) (*personalizeevents.PutEventsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutEvents", arg0)
	ret0, _ := ret[0].(*personalizeevents.PutEventsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutEvents indicates an expected call of PutEvents.
func (mr *MockPersonalizeClientMockRecorder) PutEvents(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutEvents", reflect.TypeOf((*MockPersonalizeClient)(nil).PutEvents), arg0)
}

// PutItems mocks base method.
func (m *MockPersonalizeClient) PutItems(arg0 *personalizeevents.PutItemsInput) (*personalizeevents.PutItemsOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutItems", arg0)
	ret0, _ := ret[0].(*personalizeevents.PutItemsOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutItems indicates an expected call of PutItems.
func (mr *MockPersonalizeClientMockRecorder) PutItems(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutItems", reflect.TypeOf((*MockPersonalizeClient)(nil).PutItems), arg0)
}

// PutUsers mocks base method.
func (m *MockPersonalizeClient) PutUsers(arg0 *personalizeevents.PutUsersInput) (*personalizeevents.PutUsersOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutUsers", arg0)
	ret0, _ := ret[0].(*personalizeevents.PutUsersOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutUsers indicates an expected call of PutUsers.
func (mr *MockPersonalizeClientMockRecorder) PutUsers(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutUsers", reflect.TypeOf((*MockPersonalizeClient)(nil).PutUsers), arg0)
}
