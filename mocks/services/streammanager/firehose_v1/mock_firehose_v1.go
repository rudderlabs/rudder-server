// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/rudderlabs/rudder-server/services/streammanager/firehose (interfaces: FireHoseClientV1)
//
// Generated by this command:
//
//	mockgen -destination=../../../mocks/services/streammanager/firehose_v1/mock_firehose_v1.go -package mock_firehose_v1 github.com/rudderlabs/rudder-server/services/streammanager/firehose FireHoseClientV1
//

// Package mock_firehose_v1 is a generated GoMock package.
package mock_firehose_v1

import (
	reflect "reflect"

	firehose "github.com/aws/aws-sdk-go/service/firehose"
	gomock "go.uber.org/mock/gomock"
)

// MockFireHoseClientV1 is a mock of FireHoseClientV1 interface.
type MockFireHoseClientV1 struct {
	ctrl     *gomock.Controller
	recorder *MockFireHoseClientV1MockRecorder
	isgomock struct{}
}

// MockFireHoseClientV1MockRecorder is the mock recorder for MockFireHoseClientV1.
type MockFireHoseClientV1MockRecorder struct {
	mock *MockFireHoseClientV1
}

// NewMockFireHoseClientV1 creates a new mock instance.
func NewMockFireHoseClientV1(ctrl *gomock.Controller) *MockFireHoseClientV1 {
	mock := &MockFireHoseClientV1{ctrl: ctrl}
	mock.recorder = &MockFireHoseClientV1MockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockFireHoseClientV1) EXPECT() *MockFireHoseClientV1MockRecorder {
	return m.recorder
}

// PutRecord mocks base method.
func (m *MockFireHoseClientV1) PutRecord(input *firehose.PutRecordInput) (*firehose.PutRecordOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutRecord", input)
	ret0, _ := ret[0].(*firehose.PutRecordOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutRecord indicates an expected call of PutRecord.
func (mr *MockFireHoseClientV1MockRecorder) PutRecord(input any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutRecord", reflect.TypeOf((*MockFireHoseClientV1)(nil).PutRecord), input)
}
