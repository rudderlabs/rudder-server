apiVersion: rudderstack.com/v1alpha1
kind: Rudderstack
metadata:
  name: akhileshwsidej
  namespace: akhileshwsidej
spec:
  affinity: {}
  backend:
    config:
      mountPath: /etc/rudderstack
      statsdServerUrl: localhost:8125
    extraEnvVars:
    - name: CONFIG_BACKEND_URL
      value: https://api.rudderstack.com
    - name: BUGSNAG_KEY
      value: 4a99f153290c9add2350de6721f62db8
    - name: JOBS_BACKUP_STORAGE_PROVIDER
      value: S3
    - name: JOBS_BACKUP_BUCKET
      value: rudder-saas
    - name: JOB_STATUS_BACKUP_BUCKET
      value: rudder-saas
    migrator:
      destBackendCount: 60
      destClusterVersion: 10
    nodeSelector: {}
    persistence:
      accessModes:
      - ReadWriteOnce
      annotations: {}
      mountPath: /data/rudderstack
      size: 36Gi
    service:
      port: 8080
      type: NodePort
    tolerations: []
    warehouseMode: embedded_master
  global:
    backend:
      resources:
        memoryLimitBytes: 2684354560
        memoryRequestBytes: 2684354560
    backendReplicaCount: 1
    cloudProvider: aws
    config:
      statsdServerUrl: telegraf.rudder-us-east-1a:8125
    externalPGNotifierDB: embedded_master
    externalTransformerUrl: transformer.rudder-us-east-1a
    externalWHDatabase:
      postgresDB: akhileshwsidei
      postgresHost: r-d-pg.c0vqzul4sfn2.us-east-1.rds.amazonaws.com
      postgresPassword: 3aaac50a568911ec
      postgresPort: "5432"
      postgresUsername: akhileshwsidei
    externalWarehouseDB: true
    imagePullSecrets: []
    influxdb:
      database: akhileshwsidei
      deployInfluxdbInCluster: false
      password: 3a917b22568911ec
      service:
        host: influxdb.rudder
        port: "8086"
      username: akhileshwsidei
    jobsdb:
      postgresDB: akhileshwsidei
      postgresHost: per-az-svc-rudderstack-postgresql.rudder-us-east-1a
      postgresPassword: 3a689b8a568911ec
      postgresPort: "5432"
      postgresUsername: akhileshwsidei
    nodeSelector:
      topology.kubernetes.io/zone: us-east-1a
    pgNotifierDatabase:
      postgresDB: postgres
      postgresHost: r-d-pg.c0vqzul4sfn2.us-east-1.rds.amazonaws.com
      postgresPassword: Rudderstack#2020
      postgresPort: "5432"
      postgresUsername: postgres
    rudderSources: true
    sameAZPodAffinity: true
    server:
      image:
        pullPolicy: Always
        repository: rudderlabs/develop-rudder-server
        version: pg_notifier_migrations
    storageClass: ""
    telegraf:
      config:
        outputs: []
    warehouseSeperateService: false
  grafana:
    adminPassword: 3ad75188568911ec
    adminUser: rudder
    rudderOrganizationId: ""
  influxdb:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      repository: influxdb
      tag: 1.7.6-alpine
    nameOverride: rudderstack
    persistence:
      size: 36Gi
    resources:
      limits:
        cpu: 1
        memory: 2Gi
      requests:
        cpu: 0.1
        memory: 256Mi
  ingress:
    awsAnnotations:
      alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:us-east-1:422074288268:certificate/b05dcf40-5312-4347-bef8-b7f0b8bf6956,arn:aws:acm:us-east-1:422074288268:certificate/858e70de-a341-4032-a4b8-d239b9853f07
      alb.ingress.kubernetes.io/group.name: rudderstack0
    dataplaneHost: akhwsidei.dev-rudder.rudderlabs.com
    dnsSuffix: dev-rudder.rudderlabs.com
    enabled: true
    grafanaHost: grafana-akhwsidei.dev-rudder.rudderlabs.com
  postgresql:
    enabled: false
    imagePullPolicy: IfNotPresent
    nameOverride: rudderstack-postgresql
    persistence:
      size: 100Gi
    postgresqlDatabase: jobsdb
    postgresqlPassword: password
    postgresqlRunAsUser: 70
    postgresqlUsername: rudder
    replication:
      enabled: false
    resources:
      limits:
        memory: 4096Mi
      requests:
        memory: 2048Mi
    service:
      port: 5432
      type: ClusterIP
  proxy:
    enabled: false
    replicaCount: 1
  rudderWorkspaceToken: 1l0r1vCiH3oh5udXG5SGzmadctX
  telegraf:
    enabled: false
  transformer:
    enabled: false
    image:
      pullPolicy: Always
      repository: rudderlabs/rudder-transformer
      version: latest
    replicaCount: 1
    resources:
      limits:
        memory: 768Mi
      requests:
        memory: 256Mi
    service:
      port: 9090
  warehouse_master:
    config:
      mountPath: /etc/rudderstack
    controlPlaneJSON: false
    extraEnvVars:
    - name: CONFIG_BACKEND_URL
      value: https://api.rudderstack.com
    - name: BUGSNAG_KEY
      value: 4a99f153290c9add2350de6721f62db8
    - name: RUDDER_TMPDIR
      value: /data/rudderstack
    - name: LOG_LEVEL
      value: INFO
    - name: GO_ENV
      value: production
    metrics:
      enabled: false
      image:
        pullPolicy: IfNotPresent
        registry: docker.io
        repository: telegraf
        tag: 1.15-alpine
      resources:
        limits:
          cpu: 100m
          memory: 256Mi
        requests:
          cpu: 100m
          memory: 128Mi
      securityContext:
        enabled: false
        runAsUser: 1001
    nameOverride: rudderstack-warehouse-master
    resources:
      limits:
        memory: 512Mi
      requests:
        memory: 256Mi
    service:
      port: 8082
      targetPort: 8082
      type: ClusterIP
  warehouse_slave:
    config:
      mountPath: /etc/rudderstack
    enabled: false
    extraEnvVars:
    - name: CONFIG_BACKEND_URL
      value: https://api.rudderstack.com
    - name: BUGSNAG_KEY
      value: 4a99f153290c9add2350de6721f62db8
    - name: RUDDER_TMPDIR
      value: /data/rudderstack
    - name: LOG_LEVEL
      value: INFO
    - name: GO_ENV
      value: production
    nameOverride: rudderstack-warehouse-slave
    replicaCount: 1
    resources:
      limits:
        memory: 1300Mi
      requests:
        memory: 1024Mi
    service:
      port: 8082
      targetPort: 8082
      type: ClusterIP
  whpostgresql:
    enabled: false
    image:
      pullPolicy: IfNotPresent
      repository: bitnami/postgresql
      tag: 11.6.0-debian-9-r0
    imagePullPolicy: IfNotPresent
    nameOverride: rudderstack-postgresql-warehouse
    persistence:
      size: 50Gi
    postgresqlDatabase: jobsdb
    postgresqlPassword: password
    postgresqlRunAsUser: 70
    postgresqlUsername: rudder
    resources:
      limits:
        memory: 2048Mi
      requests:
        memory: 1024Mi
    service:
      port: 5432
      type: ClusterIP
