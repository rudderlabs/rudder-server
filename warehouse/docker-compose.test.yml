version: "2.1"

services:
  jobsDb:
    container_name: jobsDb
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=jobsdb
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=rudder
    ports:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      retries: 25
  transformer:
    container_name: transformer
    image: rudderlabs/rudder-transformer:latest
    ports:
      - "9090"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:9090/health || exit 1
      interval: 1s
      retries: 25
  databricks-connector:
    image: rudderstack/rudder-databricks-connector:v1.2.0
    container_name: databricks-connector
    ports:
      - "50051"
    healthcheck:
      test: /bin/grpc_health_probe -addr=localhost:50051
      interval: 1s
      retries: 25
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000/tcp"
    environment:
      - MINIO_ACCESS_KEY=MYACCESSKEY
      - MINIO_SECRET_KEY=MYSECRETKEY
    command: server /data
    healthcheck:
      test: curl --fail http://localhost:9000/minio/health/live || exit 1
      interval: 1s
      retries: 25
  postgres:
    container_name: postgres
    image: postgres:11-alpine
    environment:
      - POSTGRES_DB=rudderdb
      - POSTGRES_PASSWORD=rudder-password
      - POSTGRES_USER=rudder
    ports:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      retries: 25
  clickhouse:
    container_name: clickhouse
    image: yandex/clickhouse-server:21-alpine
    environment:
      - CLICKHOUSE_DB=rudderdb
      - CLICKHOUSE_PASSWORD=rudder-password
      - CLICKHOUSE_USER=rudder
    ports:
      - "9000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      retries: 25
  mssql:
    container_name: mssql
    image: mcr.microsoft.com/azure-sql-edge:1.0.5
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=reallyStrongPwd123
      - SA_DB=master
      - SA_USER=SA
    ports:
      - "1433"
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U SA -P reallyStrongPwd123 -Q "SELECT 1" || exit 1
      interval: 1s
      retries: 25
  zookeeper:
    image: zookeeper:3.5
    container_name: clickhouse-zookeeper
    hostname: clickhouse-zookeeper
    healthcheck:
      test: nc -z localhost 2181 || exit 1
      interval: 1s
      retries: 25
  clickhouse01:
    image: yandex/clickhouse-server:21-alpine
    container_name: clickhouse01
    ports:
      - "9000"
    volumes:
      - ./testdata/clickhouse/cluster/clickhouse01:/etc/clickhouse-server
    depends_on:
      - zookeeper
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      retries: 25
  clickhouse02:
    image: yandex/clickhouse-server:21-alpine
    container_name: clickhouse02
    hostname: clickhouse02
    ports:
      - "9000"
    volumes:
      - ./testdata/clickhouse/cluster/clickhouse02:/etc/clickhouse-server
    depends_on:
      - zookeeper
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      retries: 25
  clickhouse03:
    image: yandex/clickhouse-server:21-alpine
    container_name: clickhouse03
    hostname: clickhouse03
    ports:
      - "9000"
    volumes:
      - ./testdata/clickhouse/cluster/clickhouse03:/etc/clickhouse-server
    depends_on:
      - zookeeper
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      retries: 25
  clickhouse04:
    image: yandex/clickhouse-server:21-alpine
    container_name: clickhouse04
    hostname: clickhouse04
    ports:
      - "9000"
    volumes:
      - ./testdata/clickhouse/cluster/clickhouse04:/etc/clickhouse-server
    depends_on:
      - zookeeper
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8123/ping || exit 1
      interval: 1s
      retries: 25
  backend:
    depends_on:
      jobsDb:
        condition: service_healthy
      transformer:
        condition: service_healthy
      databricks-connector:
        condition: service_healthy
      minio:
        condition: service_healthy
      postgres:
        condition: service_healthy
      clickhouse:
        condition: service_healthy
      mssql:
        condition: service_healthy
      zookeeper:
        condition: service_healthy
      clickhouse01:
        condition: service_healthy
      clickhouse02:
        condition: service_healthy
      clickhouse03:
        condition: service_healthy
      clickhouse04:
        condition: service_healthy
    links:
      - clickhouse01
      - clickhouse02
      - clickhouse03
      - clickhouse04
    build:
      context: ../
      dockerfile: build/Dockerfile-warehouse-integration
    ports:
      - "8080"
    env_file: testhelper/.env
    environment:
      - BIGQUERY_INTEGRATION_TEST_USER_CRED
      - REDSHIFT_INTEGRATION_TEST_USER_CRED
      - SNOWFLAKE_INTEGRATION_TEST_USER_CRED
      - DATABRICKS_INTEGRATION_TEST_USER_CRED
    entrypoint: sh -c 'go run warehouse/testhelper/config/generate-workspace-config.go && go run main.go'
    volumes:
      - ..:/app
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1
      interval: 5s
      retries: 50
  start_integration:
    image: alpine:latest
    depends_on:
      backend:
        condition: service_healthy
