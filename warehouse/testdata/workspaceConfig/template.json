{
  "enableMetrics": false,
  "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
  "sources": [
    {
      "config": {
        "eventUpload": false,
        "eventUploadTS": 1637229453729
      },
      "id": "1wRvLmEnMOOxSQD9pwaZhyCqXRE",
      "name": "postgres-wh-integration",
      "writeKey": "kwzDkh9h2fhfUVuS9jZ8uVbhV3v",
      "enabled": true,
      "sourceDefinitionId": "1TW3fuvuaZqJs877OEailT17KzZ",
      "createdBy": "1wLg8l6vAj2TuUUMIIBKL4nsVOT",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2021-08-08T14:49:21.580Z",
      "updatedAt": "2021-11-18T09:57:33.742Z",
      "destinations": [
        {
          "config": {
            "host": "postgres",
            "database": "rudderdb",
            "user": "rudder",
            "password": "rudder-password",
            "port": "5432",
            "sslMode": "disable",
            "namespace": "",
            "bucketProvider": "MINIO",
            "bucketName": "devintegrationtest",
            "accessKeyID": "MYACCESSKEY",
            "secretAccessKey": "MYSECRETKEY",
            "useSSL": false,
            "endPoint": "minio:9000",
            "syncFrequency": "30",
            "useRudderStorage": false
          },
          "secretConfig": {},
          "id": "216ZvbavR21Um6eGKQCagZHqLGZ",
          "name": "postgres-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2021-11-18T19:28:48.030Z",
          "updatedAt": "2021-11-18T19:28:48.030Z",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "host",
                  "database",
                  "user",
                  "password",
                  "port",
                  "sslMode",
                  "namespace",
                  "bucketProvider",
                  "bucketName",
                  "accessKeyID",
                  "accessKey",
                  "accountName",
                  "accountKey",
                  "credentials",
                  "secretAccessKey",
                  "useSSL",
                  "containerName",
                  "endPoint",
                  "syncFrequency",
                  "syncStartAt",
                  "excludeWindow",
                  "useRudderStorage"
                ]
              },
              "secretKeys": [
                "password",
                "accessKeyID",
                "accessKey",
                "accountKey",
                "secretAccessKey",
                "credentials"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "useRudderStorage"
                    ],
                    "properties": {
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketProvider"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "S3"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "accessKeyID",
                      "accessKey"
                    ],
                    "properties": {
                      "accessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "GCS"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "credentials"
                    ],
                    "properties": {
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "credentials": {
                        "type": "string",
                        "pattern": "(^env[.].*)|.*"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "AZURE_BLOB"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "containerName",
                      "accountName",
                      "accountKey"
                    ],
                    "properties": {
                      "accountKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accountName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "containerName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "MINIO"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "endPoint",
                      "accessKeyID",
                      "secretAccessKey",
                      "useSSL"
                    ],
                    "properties": {
                      "useSSL": {
                        "type": "boolean"
                      },
                      "endPoint": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "secretAccessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "host",
                "database",
                "user",
                "password",
                "port",
                "sslMode",
                "syncFrequency",
                "useRudderStorage"
              ],
              "properties": {
                "host": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "port": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "user": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "sslMode": {
                  "type": "string",
                  "pattern": "^(disable|require)$"
                },
                "database": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "password": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "namespace": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(?!pg_|PG_|pG_|Pg_).*"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "bucketProvider": {
                  "type": "string",
                  "pattern": "^(S3|GCS|AZURE_BLOB|MINIO)$"
                },
                "useRudderStorage": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": null,
            "id": "1bJ4YC7INdkvBTzotNh0zta5jDm",
            "name": "POSTGRES",
            "displayName": "Postgres",
            "category": "warehouse",
            "createdAt": "2020-05-01T12:41:47.463Z",
            "updatedAt": "2021-11-11T07:56:08.667Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1TW3fuvuaZqJs877OEailT17KzZ",
        "name": "Javascript",
        "displayName": "Javascript",
        "category": null,
        "createdAt": "2019-11-12T12:35:30.464Z",
        "updatedAt": "2021-09-28T02:27:30.373Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "eventUpload": false,
        "eventUploadTS": 1637229453729
      },
      "id": "1wRvLmEnMOOxNM79pwaZhyCqXRE",
      "name": "clickhouse-wh-integration",
      "writeKey": "C5AWX39IVUWSP2NcHciWvqZTa2N",
      "enabled": true,
      "sourceDefinitionId": "1TW3fuvuaZqJs877OEailT17KzZ",
      "createdBy": "1wLg8l6vAj2TuUUMIIBKL4nsVOT",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2021-08-08T14:49:21.580Z",
      "updatedAt": "2021-11-18T09:57:33.742Z",
      "destinations": [
        {
          "config": {
            "host": "clickhouse",
            "database": "rudderdb",
            "cluster": "",
            "user": "rudder",
            "password": "rudder-password",
            "port": "9000",
            "secure": false,
            "namespace": "",
            "bucketProvider": "MINIO",
            "bucketName": "devintegrationtest",
            "accessKeyID": "MYACCESSKEY",
            "secretAccessKey": "MYSECRETKEY",
            "useSSL": false,
            "endPoint": "minio:9000",
            "syncFrequency": "30",
            "useRudderStorage": false
          },
          "secretConfig": {},
          "id": "21Ev6TI6emCFDKhp2Zn6XfTP7PI",
          "name": "clickhouse-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2021-11-21T18:21:25.599Z",
          "updatedAt": "2021-11-21T18:21:25.599Z",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "host",
                  "database",
                  "cluster",
                  "user",
                  "password",
                  "port",
                  "bucketName",
                  "bucketProvider",
                  "containerName",
                  "accessKeyID",
                  "accessKey",
                  "accountKey",
                  "accountName",
                  "credentials",
                  "secretAccessKey",
                  "useSSL",
                  "endPoint",
                  "prefix",
                  "syncFrequency",
                  "syncStartAt",
                  "enableSSE",
                  "secure",
                  "skipVerify",
                  "caCertificate",
                  "excludeWindow",
                  "useRudderStorage"
                ]
              },
              "secretKeys": [
                "password",
                "accessKeyID",
                "accessKey",
                "accountKey",
                "secretAccessKey",
                "credentials"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "secure"
                    ],
                    "properties": {
                      "secure": {
                        "const": true
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "skipVerify"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "useRudderStorage"
                    ],
                    "properties": {
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketProvider"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "S3"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "accessKeyID",
                      "accessKey"
                    ],
                    "properties": {
                      "accessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "GCS"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "credentials"
                    ],
                    "properties": {
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "credentials": {
                        "type": "string",
                        "pattern": "(^env[.].*)|.*"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "AZURE_BLOB"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "containerName",
                      "accountName",
                      "accountKey"
                    ],
                    "properties": {
                      "accountKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accountName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "containerName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "MINIO"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "endPoint",
                      "accessKeyID",
                      "secretAccessKey",
                      "useSSL"
                    ],
                    "properties": {
                      "useSSL": {
                        "type": "boolean"
                      },
                      "endPoint": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "secretAccessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "host",
                "port",
                "database",
                "user",
                "secure",
                "syncFrequency",
                "useRudderStorage"
              ],
              "properties": {
                "host": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "port": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "user": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "secure": {
                  "type": "boolean",
                  "default": false
                },
                "cluster": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "database": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "password": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "skipVerify": {
                  "type": "boolean"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "caCertificate": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "bucketProvider": {
                  "type": "string",
                  "pattern": "^(S3|GCS|AZURE_BLOB|MINIO)$"
                },
                "useRudderStorage": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": null,
            "id": "1eBvkIRSwc2ESGMK9dj6OXq2G12",
            "name": "CLICKHOUSE",
            "displayName": "ClickHouse",
            "category": "warehouse",
            "createdAt": "2020-07-03T20:25:41.439Z",
            "updatedAt": "2021-11-11T07:55:35.140Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1TW3fuvuaZqJs877OEailT17KzZ",
        "name": "Javascript",
        "displayName": "Javascript",
        "category": null,
        "createdAt": "2019-11-12T12:35:30.464Z",
        "updatedAt": "2021-09-28T02:27:30.373Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "eventUpload": false,
        "eventUploadTS": 1637229453729
      },
      "id": "1wRvLmEnMOOxNM79ghdZhyCqXRE",
      "name": "clickhouse-cluster-wh-integration",
      "writeKey": "95RxRTZHWUsaD6HEdz0ThbXfQ6p",
      "enabled": true,
      "sourceDefinitionId": "1TW3fuvuaZqJs877OEailT17KzZ",
      "createdBy": "1wLg8l6vAj2TuUUMIIBKL4nsVOT",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2021-08-08T14:49:21.580Z",
      "updatedAt": "2021-11-18T09:57:33.742Z",
      "destinations": [
        {
          "config": {
            "host": "clickhouse01",
            "database": "rudderdb",
            "cluster": "rudder_cluster",
            "user": "rudder",
            "password": "rudder-password",
            "port": "9000",
            "secure": false,
            "namespace": "",
            "bucketProvider": "MINIO",
            "bucketName": "devintegrationtest",
            "accessKeyID": "MYACCESSKEY",
            "secretAccessKey": "MYSECRETKEY",
            "useSSL": false,
            "endPoint": "minio:9000",
            "syncFrequency": "30",
            "useRudderStorage": false
          },
          "secretConfig": {},
          "id": "21Ev6TI6emCFDKhp2Zn6XfTP7PI",
          "name": "clickhouse-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2021-11-21T18:21:25.599Z",
          "updatedAt": "2021-11-21T18:21:25.599Z",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "host",
                  "database",
                  "cluster",
                  "user",
                  "password",
                  "port",
                  "bucketName",
                  "bucketProvider",
                  "containerName",
                  "accessKeyID",
                  "accessKey",
                  "accountKey",
                  "accountName",
                  "credentials",
                  "secretAccessKey",
                  "useSSL",
                  "endPoint",
                  "prefix",
                  "syncFrequency",
                  "syncStartAt",
                  "enableSSE",
                  "secure",
                  "skipVerify",
                  "caCertificate",
                  "excludeWindow",
                  "useRudderStorage"
                ]
              },
              "secretKeys": [
                "password",
                "accessKeyID",
                "accessKey",
                "accountKey",
                "secretAccessKey",
                "credentials"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "secure"
                    ],
                    "properties": {
                      "secure": {
                        "const": true
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "skipVerify"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "useRudderStorage"
                    ],
                    "properties": {
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketProvider"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "S3"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "accessKeyID",
                      "accessKey"
                    ],
                    "properties": {
                      "accessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "GCS"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "credentials"
                    ],
                    "properties": {
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "credentials": {
                        "type": "string",
                        "pattern": "(^env[.].*)|.*"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "AZURE_BLOB"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "containerName",
                      "accountName",
                      "accountKey"
                    ],
                    "properties": {
                      "accountKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accountName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "containerName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "MINIO"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "endPoint",
                      "accessKeyID",
                      "secretAccessKey",
                      "useSSL"
                    ],
                    "properties": {
                      "useSSL": {
                        "type": "boolean"
                      },
                      "endPoint": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "secretAccessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "host",
                "port",
                "database",
                "user",
                "secure",
                "syncFrequency",
                "useRudderStorage"
              ],
              "properties": {
                "host": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "port": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "user": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "secure": {
                  "type": "boolean",
                  "default": false
                },
                "cluster": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "database": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "password": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "skipVerify": {
                  "type": "boolean"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "caCertificate": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "bucketProvider": {
                  "type": "string",
                  "pattern": "^(S3|GCS|AZURE_BLOB|MINIO)$"
                },
                "useRudderStorage": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": null,
            "id": "1eBvkIRSwc2ESGMK9dj6OXq2G12",
            "name": "CLICKHOUSE",
            "displayName": "ClickHouse",
            "category": "warehouse",
            "createdAt": "2020-07-03T20:25:41.439Z",
            "updatedAt": "2021-11-11T07:55:35.140Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1TW3fuvuaZqJs877OEailT17KzZ",
        "name": "Javascript",
        "displayName": "Javascript",
        "category": null,
        "createdAt": "2019-11-12T12:35:30.464Z",
        "updatedAt": "2021-09-28T02:27:30.373Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "eventUpload": false,
        "eventUploadTS": 1637229453729
      },
      "id": "1wRvLmEnMOONMbdspwaZhyCqXRE",
      "name": "mssql-wh-integration",
      "writeKey": "YSQ3n267l1VQKGNbSuJE9fQbzON",
      "enabled": true,
      "sourceDefinitionId": "1TW3fuvuaZqJs877OEailT17KzZ",
      "createdBy": "1wLg8l6vAj2TuUUMIIBKL4nsVOT",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2021-08-08T14:49:21.580Z",
      "updatedAt": "2021-11-18T09:57:33.742Z",
      "destinations": [
        {
          "config": {
            "host": "mssql",
            "database": "master",
            "user": "SA",
            "password": "reallyStrongPwd123",
            "port": "1433",
            "sslMode": "disable",
            "namespace": "",
            "bucketProvider": "MINIO",
            "bucketName": "devintegrationtest",
            "accessKeyID": "MYACCESSKEY",
            "secretAccessKey": "MYSECRETKEY",
            "useSSL": false,
            "endPoint": "minio:9000",
            "syncFrequency": "30",
            "useRudderStorage": false
          },
          "secretConfig": {},
          "id": "21Ezdq58khNMj07VJB0VJmxLvgu",
          "name": "mssql-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2021-11-21T18:58:44.286Z",
          "updatedAt": "2021-11-21T18:58:44.286Z",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "host",
                  "database",
                  "user",
                  "password",
                  "port",
                  "sslMode",
                  "namespace",
                  "bucketProvider",
                  "bucketName",
                  "accessKeyID",
                  "accessKey",
                  "accountName",
                  "accountKey",
                  "credentials",
                  "secretAccessKey",
                  "useSSL",
                  "containerName",
                  "endPoint",
                  "syncFrequency",
                  "syncStartAt",
                  "excludeWindow",
                  "useRudderStorage"
                ]
              },
              "secretKeys": [
                "password",
                "accessKeyID",
                "accessKey",
                "accountKey",
                "secretAccessKey",
                "credentials"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "useRudderStorage"
                    ],
                    "properties": {
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketProvider"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "S3"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "accessKeyID",
                      "accessKey"
                    ],
                    "properties": {
                      "accessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "GCS"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "credentials"
                    ],
                    "properties": {
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "credentials": {
                        "type": "string",
                        "pattern": "(^env[.].*)|.*"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "AZURE_BLOB"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "containerName",
                      "accountName",
                      "accountKey"
                    ],
                    "properties": {
                      "accountKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accountName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "containerName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "MINIO"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "endPoint",
                      "accessKeyID",
                      "secretAccessKey",
                      "useSSL"
                    ],
                    "properties": {
                      "useSSL": {
                        "type": "boolean"
                      },
                      "endPoint": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "secretAccessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "host",
                "database",
                "user",
                "password",
                "port",
                "sslMode",
                "syncFrequency",
                "useRudderStorage"
              ],
              "properties": {
                "host": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "port": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "user": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "sslMode": {
                  "type": "string",
                  "pattern": "^(disable|true|false)$"
                },
                "database": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "password": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "namespace": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(?!pg_|PG_|pG_|Pg_).*"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "bucketProvider": {
                  "type": "string",
                  "pattern": "^(S3|GCS|AZURE_BLOB|MINIO)$"
                },
                "useRudderStorage": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": {},
            "id": "1qvbUYC2xVQ7lvI9UUYkkM4IBt9",
            "name": "MSSQL",
            "displayName": "Microsoft SQL Server",
            "category": "warehouse",
            "createdAt": "2021-04-09T10:10:26.589Z",
            "updatedAt": "2021-11-11T07:55:15.622Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1TW3fuvuaZqJs877OEailT17KzZ",
        "name": "Javascript",
        "displayName": "Javascript",
        "category": null,
        "createdAt": "2019-11-12T12:35:30.464Z",
        "updatedAt": "2021-09-28T02:27:30.373Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "isSampleSource": true,
        "eventUpload": false,
        "eventUploadTS": 1646073666353
      },
      "liveEventsConfig": {
        "eventUpload": false,
        "eventUploadTS": 1646073666353
      },
      "id": "24p1HhPk09FW25Kuzvx7GshCLKR",
      "name": "bigquery-wh-integration",
      "writeKey": "J77aX7tLFJ84qYU6UrN8ctecwZt",
      "enabled": true,
      "sourceDefinitionId": "1dCzCUAtpWDzNxgGUYzq9sZdZZB",
      "createdBy": "24p1CMAkx18KwNbFDXlR7sUhqaa",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2022-02-08T09:30:27.073Z",
      "updatedAt": "2022-02-28T18:41:06.362Z",
      "destinations": [
        {
          "config": {
            "project": "{{.bqProject}}",
            "location": "{{.bqLocation}}",
            "bucketName": "{{.bqBucketName}}",
            "credentials": "{{.bqCredentials}}",
            "prefix": "",
            "namespace": "",
            "syncFrequency": "30"
          },
          "liveEventsConfig": {},
          "secretConfig": {},
          "id": "26Bgm9FrQDZjvadSwAlpd35atwn",
          "name": "bigquery-wh-integration",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2022-03-10T08:55:49.791Z",
          "updatedAt": "2022-03-10T08:55:49.791Z",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "project",
                  "location",
                  "bucketName",
                  "credentials",
                  "prefix",
                  "namespace",
                  "syncFrequency",
                  "syncStartAt",
                  "excludeWindow"
                ]
              },
              "secretKeys": [
                "credentials"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "project",
                "bucketName",
                "credentials",
                "syncFrequency"
              ],
              "properties": {
                "prefix": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "project": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "location": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "namespace": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "bucketName": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "credentials": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                }
              },
              "additionalProperties": true
            },
            "responseRules": null,
            "options": null,
            "id": "1UmeD7xhVGHsPDEHoCiSPEGytS3",
            "name": "BQ",
            "displayName": "BigQuery",
            "category": "warehouse",
            "createdAt": "2019-12-10T08:21:15.841Z",
            "updatedAt": "2022-02-08T06:46:30.483Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1dCzCUAtpWDzNxgGUYzq9sZdZZB",
        "name": "HTTP",
        "displayName": "HTTP",
        "category": "",
        "createdAt": "2020-06-12T06:35:35.962Z",
        "updatedAt": "2020-06-12T06:35:35.962Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "isSampleSource": true,
        "eventUpload": false,
        "eventUploadTS": 1646073666353
      },
      "liveEventsConfig": {
        "eventUpload": false,
        "eventUploadTS": 1646073666353
      },
      "id": "24p1HhPk09FW25Kuzvx7GshCLKR",
      "name": "snowflake-wh-integration",
      "writeKey": "2eSJyYtqwcFiUILzXv2fcNIrWO7",
      "enabled": true,
      "sourceDefinitionId": "1dCzCUAtpWDzNxgGUYzq9sZdZZB",
      "createdBy": "24p1CMAkx18KwNbFDXlR7sUhqaa",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2022-02-08T09:30:27.073Z",
      "updatedAt": "2022-02-28T18:41:06.362Z",
      "destinations": [
        {
          "config": {
            "account": "{{.sf_Account}}",
            "database": "{{.sf_DBName}}",
            "warehouse": "{{.sf_WHName}}",
            "user": "{{.sf_Username}}",
            "password": "{{.sf_Password}}",
            "cloudProvider": "AWS",
            "bucketName": "{{.sf_bucketName}}",
            "storageIntegration": "",
            "accessKeyID": "{{.sf_accessKeyID}}",
            "accessKey": "{{.sf_accessKey}}",
            "namespace": "",
            "prefix": "snowflake-prefix",
            "syncFrequency": "30",
            "enableSSE": false,
            "useRudderStorage": false
          },
          "liveEventsConfig": {},
          "secretConfig": {},
          "id": "24qeADObp6eIhjjDnEppO6P1SNc",
          "name": "snowflake-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2022-02-08T23:19:58.278Z",
          "updatedAt": "2022-05-17T08:18:33.587Z",
          "revisionId": "29HgdgvNPwqFDMONSgmIZ3YSehV",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "account",
                  "database",
                  "warehouse",
                  "user",
                  "password",
                  "cloudProvider",
                  "bucketName",
                  "containerName",
                  "storageIntegration",
                  "accessKeyID",
                  "accessKey",
                  "accountName",
                  "accountKey",
                  "credentials",
                  "namespace",
                  "prefix",
                  "syncFrequency",
                  "syncStartAt",
                  "enableSSE",
                  "excludeWindow",
                  "useRudderStorage"
                ]
              },
              "secretKeys": [
                "password",
                "accessKeyID",
                "accessKey"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "useRudderStorage"
                    ],
                    "properties": {
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "cloudProvider"
                    ]
                  }
                },
                {
                  "if": {
                    "required": [
                      "cloudProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "cloudProvider": {
                        "const": "AWS"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "accessKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "enableSSE": {
                        "type": "boolean"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accessKeyID": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "cloudProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "cloudProvider": {
                        "const": "GCP"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "credentials": {
                        "type": "string",
                        "pattern": "(^env[.].*)|.*"
                      },
                      "storageIntegration": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "cloudProvider",
                      "useRudderStorage"
                    ],
                    "properties": {
                      "cloudProvider": {
                        "const": "AZURE"
                      },
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "properties": {
                      "accountKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "accountName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "containerName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      },
                      "storageIntegration": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{0,100})$"
                      }
                    }
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "account",
                "database",
                "warehouse",
                "user",
                "password",
                "syncFrequency",
                "useRudderStorage"
              ],
              "properties": {
                "user": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "account": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "database": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "password": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "namespace": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "warehouse": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "cloudProvider": {
                  "type": "string",
                  "pattern": "^(AWS|GCP|AZURE)$"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "useRudderStorage": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": null,
            "options": null,
            "id": "1XjvXnzw34UMAz1YOuKqL1kwzh6",
            "name": "SNOWFLAKE",
            "displayName": "Snowflake",
            "category": "warehouse",
            "createdAt": "2020-02-13T05:39:20.184Z",
            "updatedAt": "2022-02-08T06:46:45.432Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1dCzCUAtpWDzNxgGUYzq9sZdZZB",
        "name": "HTTP",
        "displayName": "HTTP",
        "category": "",
        "createdAt": "2020-06-12T06:35:35.962Z",
        "updatedAt": "2020-06-12T06:35:35.962Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "isSampleSource": true,
        "eventUpload": false,
        "eventUploadTS": 1653346591988
      },
      "liveEventsConfig": {
        "eventUpload": false,
        "eventUploadTS": 1653346591988
      },
      "id": "279L3gEKqwruBoKGsXZtSVX7vIy",
      "name": "redshift-wh-integration",
      "writeKey": "JAAwdCxmM8BIabKERsUhPNmMmdf",
      "enabled": true,
      "sourceDefinitionId": "1dCzCUAtpWDzNxgGUYzq9sZdZZB",
      "createdBy": "279Kz3NhcXsUAx2KHnx1HKhdtbk",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2022-03-31T11:45:57.339Z",
      "updatedAt": "2022-05-23T22:56:32.000Z",
      "destinations": [
        {
          "config": {
            "host": "{{.rs_Host}}",
            "port": "{{.rs_Port}}",
            "database": "{{.rs_DbName}}",
            "user": "{{.rs_Username}}",
            "password": "{{.rs_Password}}",
            "bucketName": "{{.rs_bucketName}}",
            "accessKeyID": "{{.rs_accessKeyID}}",
            "accessKey": "{{.rs_accessKey}}",
            "prefix": "",
            "namespace": "",
            "syncFrequency": "30",
            "enableSSE": false,
            "useRudderStorage": false
          },
          "liveEventsConfig": {},
          "secretConfig": {},
          "id": "27SthahyhhqZE74HT4NTtNPl06V",
          "name": "redshift-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2022-04-07T09:57:14.783Z",
          "updatedAt": "2022-05-17T08:16:32.613Z",
          "revisionId": "29HgOWobrn0RYZLpaSwPIbN2987",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "host",
                  "port",
                  "database",
                  "user",
                  "password",
                  "bucketName",
                  "accessKeyID",
                  "accessKey",
                  "prefix",
                  "namespace",
                  "syncFrequency",
                  "syncStartAt",
                  "enableSSE",
                  "excludeWindow",
                  "useRudderStorage"
                ]
              },
              "secretKeys": [
                "password",
                "accessKeyID",
                "accessKey"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "useRudderStorage"
                    ],
                    "properties": {
                      "useRudderStorage": {
                        "const": false
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName"
                    ]
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "host",
                "port",
                "database",
                "user",
                "password",
                "syncFrequency",
                "useRudderStorage"
              ],
              "properties": {
                "host": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,128})$"
                },
                "port": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "user": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "prefix": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "database": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "password": {
                  "type": "string",
                  "pattern": "(^env[.].*)|.*"
                },
                "accessKey": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "enableSSE": {
                  "type": "boolean"
                },
                "namespace": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(?!pg_|PG_|pG_|Pg_).*"
                },
                "bucketName": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "accessKeyID": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "useRudderStorage": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": null,
            "options": null,
            "id": "1UVZiJF7OgLaiIY2Jts8XOQE3M6",
            "name": "RS",
            "displayName": "Redshift",
            "category": "warehouse",
            "createdAt": "2019-12-04T07:17:28.337Z",
            "updatedAt": "2022-02-08T06:46:22.804Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1dCzCUAtpWDzNxgGUYzq9sZdZZB",
        "name": "HTTP",
        "displayName": "HTTP",
        "category": "",
        "createdAt": "2020-06-12T06:35:35.962Z",
        "updatedAt": "2020-06-12T06:35:35.962Z"
      },
      "dgSourceTrackingPlanConfig": null
    },
    {
      "config": {
        "eventUpload": false,
        "eventUploadTS": 1648195575635
      },
      "liveEventsConfig": {
        "eventUpload": false,
        "eventUploadTS": 1648195575635
      },
      "id": "25H5EpYzojqQSepRSaGBrrPx3e4",
      "name": "deltalake-wh-integration",
      "writeKey": "sToFgoilA0U1WxNeW1gdgUVDsEW",
      "enabled": true,
      "sourceDefinitionId": "1TW48i2bIzEl1HPf825cEznfIM8",
      "createdBy": "1wDN9v6bW9ymBaR7b7r0EjV3leC",
      "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
      "deleted": false,
      "createdAt": "2022-02-18T07:57:42.736Z",
      "updatedAt": "2022-03-25T08:06:15.642Z",
      "destinations": [
        {
          "config": {
            "host": "{{.dl_host}}",
            "port": "{{.dl_port}}",
            "path": "{{.dl_path}}",
            "token": "{{.dl_token}}",
            "namespace": "",
            "bucketProvider": "AZURE_BLOB",
            "containerName": "{{.dl_containerName}}",
            "prefix": "",
            "useSTSTokens": false,
            "enableSSE": false,
            "accountName": "{{.dl_accountName}}",
            "accountKey": "{{.dl_accountKey}}",
            "syncFrequency": "30",
            "eventDelivery": false,
            "eventDeliveryTS": 1648195480174
          },
          "liveEventsConfig": {
            "eventDelivery": false,
            "eventDeliveryTS": 1648195480174
          },
          "secretConfig": {},
          "id": "25IDjdnoEus6DDNrth3SWO1FOpu",
          "name": "deltalake-demo",
          "enabled": true,
          "workspaceId": "BpLnfgDsc2WD8F2qNfHK5a84jjJ",
          "deleted": false,
          "createdAt": "2022-02-18T17:37:22.146Z",
          "updatedAt": "2022-05-25T07:38:38.033Z",
          "revisionId": "29eClxJQQlaWzMWyqnQctFDP5T2",
          "transformations": [],
          "destinationDefinition": {
            "config": {
              "destConfig": {
                "defaultConfig": [
                  "host",
                  "port",
                  "path",
                  "token",
                  "namespace",
                  "bucketProvider",
                  "bucketName",
                  "containerName",
                  "prefix",
                  "useSTSTokens",
                  "accessKeyID",
                  "accessKey",
                  "enableSSE",
                  "accountName",
                  "accountKey",
                  "credentials",
                  "syncFrequency",
                  "syncStartAt",
                  "excludeWindow",
                  "enableExternalLocation",
                  "externalLocation"
                ]
              },
              "secretKeys": [
                "accessKeyID",
                "accessKey",
                "accountName",
                "accountKey",
                "credentials",
                "token"
              ],
              "excludeKeys": [],
              "includeKeys": [],
              "transformAt": "processor",
              "transformAtV1": "processor",
              "supportedSourceTypes": [
                "android",
                "ios",
                "web",
                "unity",
                "amp",
                "cloud",
                "warehouse",
                "reactnative",
                "cloudSource",
                "flutter",
                "cordova"
              ],
              "saveDestinationResponse": true
            },
            "configSchema": {
              "type": "object",
              "allOf": [
                {
                  "if": {
                    "required": [
                      "enableExternalLocation"
                    ],
                    "properties": {
                      "enableExternalLocation": {
                        "const": "true"
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "externalLocation"
                    ],
                    "properties": {
                      "externalLocation": {
                        "type": "string",
                        "pattern": "(^env[.].*)|.*"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "S3"
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "enableSSE",
                      "useSTSTokens"
                    ],
                    "properties": {
                      "enableSSE": {
                        "type": "boolean"
                      },
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{1,100})$"
                      },
                      "useSTSTokens": {
                        "type": "boolean"
                      }
                    }
                  },
                  "allOf": [
                    {
                      "if": {
                        "required": [
                          "useSTSTokens"
                        ],
                        "properties": {
                          "useSTSTokens": {
                            "const": true
                          }
                        }
                      },
                      "then": {
                        "required": [
                          "accessKeyID",
                          "accessKey"
                        ],
                        "properties": {
                          "accessKey": {
                            "type": "string",
                            "pattern": "(^env[.].*)|^(.{1,100})$"
                          },
                          "accessKeyID": {
                            "type": "string",
                            "pattern": "(^env[.].*)|^(.{1,100})$"
                          }
                        }
                      }
                    }
                  ]
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "GCS"
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "bucketName",
                      "credentials"
                    ],
                    "properties": {
                      "bucketName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{1,100})$"
                      },
                      "credentials": {
                        "type": "string",
                        "pattern": "(^env[.].+)|.+"
                      }
                    }
                  }
                },
                {
                  "if": {
                    "required": [
                      "bucketProvider"
                    ],
                    "properties": {
                      "bucketProvider": {
                        "const": "AZURE_BLOB"
                      }
                    }
                  },
                  "then": {
                    "required": [
                      "containerName",
                      "accountName",
                      "accountKey"
                    ],
                    "properties": {
                      "accountKey": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{1,100})$"
                      },
                      "accountName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{1,100})$"
                      },
                      "containerName": {
                        "type": "string",
                        "pattern": "(^env[.].*)|^(.{1,100})$"
                      }
                    }
                  }
                }
              ],
              "$schema": "http://json-schema.org/draft-07/schema",
              "required": [
                "host",
                "port",
                "path",
                "token",
                "syncFrequency",
                "bucketProvider"
              ],
              "properties": {
                "host": {
                  "type": "string",
                  "pattern": "(^env[.].+)|^(.{1,100})$"
                },
                "path": {
                  "type": "string",
                  "pattern": "(^env[.].+)|^(.{1,100})$"
                },
                "port": {
                  "type": "string",
                  "pattern": "(^env[.].+)|^(.{1,100})$"
                },
                "token": {
                  "type": "string",
                  "pattern": "(^env[.].+)|^(.{1,100})$"
                },
                "prefix": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^(.{0,100})$"
                },
                "namespace": {
                  "type": "string",
                  "pattern": "(^env[.].*)|^((?!pg_|PG_|pG_|Pg_).{0,64})$"
                },
                "syncStartAt": {
                  "type": "string"
                },
                "excludeWindow": {
                  "type": "object",
                  "required": [
                    "excludeWindowStartTime",
                    "excludeWindowEndTime"
                  ],
                  "properties": {
                    "excludeWindowEndTime": {
                      "type": "string"
                    },
                    "excludeWindowStartTime": {
                      "type": "string"
                    }
                  }
                },
                "syncFrequency": {
                  "type": "string",
                  "default": "30",
                  "pattern": "^(30|60|180|360|720|1440)$"
                },
                "bucketProvider": {
                  "type": "string",
                  "pattern": "^(S3|GCS|AZURE_BLOB)$"
                },
                "enableExternalLocation": {
                  "type": "boolean",
                  "default": false
                }
              },
              "additionalProperties": true
            },
            "responseRules": {},
            "options": null,
            "id": "23HLpnDJnIg7DsBvDWGU6DQzFEo",
            "name": "DELTALAKE",
            "displayName": "Databricks (Delta Lake)",
            "category": "warehouse",
            "createdAt": "2022-01-05T12:37:30.136Z",
            "updatedAt": "2022-05-25T15:07:06.596Z"
          },
          "isConnectionEnabled": true,
          "isProcessorEnabled": true
        }
      ],
      "sourceDefinition": {
        "options": null,
        "id": "1TW48i2bIzEl1HPf825cEznfIM8",
        "name": "Javascript",
        "displayName": "Javascript",
        "category": null,
        "createdAt": "2019-11-12T12:39:19.885Z",
        "updatedAt": "2020-06-18T11:54:06.114Z"
      },
      "dgSourceTrackingPlanConfig": null
    }
  ],
  "libraries": [
    {
      "versionId": "def"
    },
    {
      "versionId": "ghi"
    },
    {
      "versionId": "23Uxw7QEiOg8e0KkQV8LmNfWaWh"
    }
  ]
}
